FROM golang:alpine as build
RUN apk --no-cache add git curl py-pip
ENV GO111MODULE=on
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV SC_VERSION=stable
WORKDIR /usr/local/bin
# Install shellcheck
RUN curl -Ls "https://storage.googleapis.com/shellcheck/shellcheck-${SC_VERSION}.linux.x86_64.tar.xz" | tar --xz -xf  - shellcheck-"${SC_VERSION}"/shellcheck --strip-components 1; \
    shellcheck --version
# Install protoc
RUN curl -Ls https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip | unzip -
# Install yamllint
RUN pip install yamllint

# Install gotestsum
ENV GOTESTSUM_VERSION=0.3.2
RUN curl -Ls https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz | tar -xzvf - gotestsum


# Resolve module dependencies
RUN mkdir /root/networkservicemesh
ADD ["go.mod","/root/networkservicemesh"]
WORKDIR /root/networkservicemesh/
RUN go mod download

# Bring in the code
ADD [".","/root/networkservicemesh"]

# Yamllint things
RUN yamllint -c .yamllint.yml $(find . -name *.yaml | grep -v 'vendor/')

# Check go version, vet, install various things, build
RUN go version
RUN go vet --all ./...
RUN go install k8s.io/code-generator/cmd/deepcopy-gen
RUN go install github.com/golang/protobuf/protoc-gen-go
RUN go get golang.org/x/tools/cmd/stringer
RUN CGO_ENABLED=0 GOOS=linux go build ./...
RUN mkdir -p /junit
RUN CGO_ENABLED=0 GOOS=linux gotestsum --junitfile /junit/unit-tests.xml -- -short `go list ./... | grep -v networkservicemesh/test/`